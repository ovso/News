apply plugin: 'com.android.application'
apply plugin: 'hugo'


android {
  compileSdkVersion rootProject.compile_sdk_version
  defaultConfig {
    applicationId rootProject.application_id
    minSdkVersion rootProject.min_sdk_version
    targetSdkVersion rootProject.target_sdk_version
    versionCode rootProject.version_code

    int versionMajor = 0
    int versionMinor = 0
    int versionPatch = rootProject.version_code

    if (1000 > versionPatch && versionPatch > 99) {
      versionMajor = versionPatch / 100
      versionMinor = (versionPatch % 100) / 10
      versionPatch = (versionPatch % 100) % 10
    } else if (100 > versionCode && versionPatch > 9) {
      versionMajor = 0
      versionMinor = versionPatch / 10
      versionPatch = versionPatch % 10
    } else if (versionPatch < 10) {
      versionMajor = 0
      versionMinor = 0
      versionPatch = versionPatch / 1
    }

    versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  def keystorePropertiesFile = rootProject.file("keystore.properties")
  def keystoreProperties = new Properties()
  keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

  signingConfigs {
    release {
      keyAlias keystoreProperties['keyAlias']
      keyPassword keystoreProperties['keyPassword']
      storeFile file(keystoreProperties['storeFile'])
      storePassword keystoreProperties['storePassword']
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      useProguard true
      shrinkResources true
      proguardFile 'proguard-butterknipe.pro'
      proguardFile 'proguard-retrofit.pro'
      proguardFile 'proguard-okhttp.pro'
      proguardFile 'proguard-dagger.pro'
    }

    debug {
    }
  }

  configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    exclude group: 'com.android.support', module: 'customtabs'
  }

  compileOptions {
    targetCompatibility 1.8
    sourceCompatibility 1.8
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  // Support
  implementation "com.android.support:appcompat-v7:$rootProject.support_lib_version"
  implementation "com.android.support:support-v4:$rootProject.support_lib_version"
  implementation "com.android.support:design:$rootProject.support_lib_version"
  implementation "com.android.support.constraint:constraint-layout:$rootProject.constraint_layout_version"

  // Firebase
  implementation "com.google.firebase:firebase-ads:$rootProject.firebase_ads_version"

  // Butterknife
  implementation "com.jakewharton:butterknife:$rootProject.butterknife_version"
  annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknife_version"

  // Dagger2
  implementation "com.google.dagger:dagger:$rootProject.dagger_version"
  implementation "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
  annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
  annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"

  // Timber
  implementation "com.jakewharton.timber:timber:$rootProject.timber_version"

  // Lombok
  compileOnly "org.projectlombok:lombok:$rootProject.lombok_version"
  annotationProcessor "org.projectlombok:lombok:$rootProject.lombok_version"

  // Network
  implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
  implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit_version"
  implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3_version"
  implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp3_version"

  // Rxjava2
  implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroid_version"
  implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava_version"
  implementation "com.jakewharton.rxbinding2:rxbinding:$rootProject.rxbinding_version"

  // Room
  implementation "android.arch.persistence.room:runtime:$rootProject.room_version"
  annotationProcessor "android.arch.persistence.room:compiler:$rootProject.room_version"
  implementation "android.arch.persistence.room:rxjava2:$rootProject.room_version"
  implementation "android.arch.lifecycle:livedata:$rootProject.lifecycle_version"
  annotationProcessor "android.arch.lifecycle:compiler:$rootProject.lifecycle_version"

  // Drag
  implementation('com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.11.0@aar') {
    transitive = true
  }

  // sharedpreferences
  implementation "com.pixplicity.easyprefs:library:$rootProject.easyprefs_version"

  // Stetho
  implementation "com.facebook.stetho:stetho:$rootProject.stetho_version"

  // Test
  testImplementation "junit:junit:$rootProject.junit_version"
  androidTestImplementation "com.android.support.test:runner:$rootProject.runner_version"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espresso_core_version"
}